# Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.


class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums) == 0:
            return 0
        
        max_sum = nums[0]
        cur_sum = nums[0]
        
        for num in nums[1:]:
            cur_sum = max(cur_sum + num, num)   
            max_sum = max(cur_sum, max_sum)
        
        return max_sum
